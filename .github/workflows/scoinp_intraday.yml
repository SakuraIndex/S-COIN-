name: "S-COIN+ • intraday + publish (JST 09:00-15:30)"

on:
  workflow_dispatch:
  schedule:
    - cron: "35 2 * * 1-5"   # JST 11:35
    - cron: "35 6 * * 1-5"   # JST 15:35

permissions:
  contents: write

concurrency:
  group: scoinp-intraday-${{ github.ref }}
  cancel-in-progress: false

env:
  INDEX_KEY: S_COIN_PLUS
  LABEL: "S-COIN+"
  CSV: docs/outputs/scoin_plus_intraday.csv
  DT_COL: "Datetime"
  SITE_REPO: SakuraIndex/Sakura-Index-Site
  SITE_BRANCH: main
  PUBLISH_DIR: docs/charts/S-COIN+
  PUBLISH_TOKEN: ${{ secrets.SITE_PAT || secrets.SITE_PUBLISH_TOKEN || secrets.GITHUB_TOKEN }}
  OUT_DIR: docs/outputs
  OUT_JSON: docs/outputs/scoin_plus_stats.json
  OUT_TEXT: docs/outputs/scoin_plus_post_intraday.txt
  SNAPSHOT_PNG: docs/outputs/scoin_plus_intraday.png
  SNAPSHOT_AM_PNG: docs/outputs/scoin_plus_intraday_am.png

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          set -e
          python -m pip install -U --no-cache-dir pip
          python -m pip install -U --no-cache-dir pandas matplotlib pytz yfinance

      - name: Skip when market closed (JST)
        run: |
          H=$(TZ=Asia/Tokyo date +%H%M)
          if [ "$H" -lt 0900 ] || [ "$H" -gt 1530 ]; then
            echo "Market closed — skip."
            exit 0
          fi

      - name: Build intraday CSV (prefer repo script, optional yfinance fallback)
        run: |
          set -e
          mkdir -p docs/outputs
          echo "=== Run intraday build ==="
          if [ -f src/scoin_plus_intraday.py ]; then
            python src/scoin_plus_intraday.py --out "${CSV}" --start "09:00" --end "15:30" || true
          fi

          echo "=== Check CSV freshness ==="
          python -c "
import pandas as pd, os
from datetime import datetime, timedelta, timezone
try:
    import zoneinfo
    JST = zoneinfo.ZoneInfo('Asia/Tokyo')
except Exception:
    from pytz import timezone as _tz
    JST = _tz('Asia/Tokyo')
P='docs/outputs/scoin_plus_intraday.csv'
if not os.path.exists(P):
    print('CHECK_CSV_STATUS: missing'); exit(2)
try:
    df=pd.read_csv(P, parse_dates=['Datetime'])
except Exception:
    print('CHECK_CSV_STATUS: empty'); exit(2)
if df.empty:
    print('CHECK_CSV_STATUS: empty'); exit(2)
if df['Datetime'].dt.tz is None:
    df['Datetime']=df['Datetime'].dt.tz_localize('Asia/Tokyo', nonexistent='NaT', ambiguous='NaT')
df['Datetime']=df['Datetime'].dt.tz_convert('Asia/Tokyo')
today=datetime.now(JST).date()
df=df[df['Datetime'].dt.date==today]
if df.empty:
    print('CHECK_CSV_STATUS: no_today'); exit(2)
last=df['Datetime'].max().to_pydatetime().astimezone(JST)
if (datetime.now(JST)-last).total_seconds()>5400:
    print(f'CHECK_CSV_STATUS: stale:{last.isoformat()}'); exit(2)
print('CHECK_CSV_STATUS: ok')
"

          if [ $? -ne 0 ] && [ -f tickers_scoinp.txt ]; then
            echo "=== Running yfinance fallback ==="
            python -c "
import pandas as pd, datetime as dt, pytz, yfinance as yf, os, sys
csv_path='docs/outputs/scoin_plus_intraday.csv'
tickers=[t.strip() for t in open('tickers_scoinp.txt') if t.strip() and not t.startswith('#')] if os.path.exists('tickers_scoinp.txt') else []
if not tickers:
    print('NO_TICKERS'); sys.exit(2)
jst=pytz.timezone('Asia/Tokyo')
today=dt.datetime.now(jst).date()
frames=[]
for t in tickers:
    try:
        df=yf.download(t, period='5d', interval='1m', prepost=False, auto_adjust=True, threads=False)
    except Exception as e:
        print('download failed', t, e); continue
    if df is None or df.empty: continue
    if df.index.tz is None: df.index=df.index.tz_localize('UTC')
    df=df.tz_convert(jst)
    df=df[df.index.date==today]
    if df.empty: continue
    df=df[['Close']].rename(columns={'Close':t})
    frames.append(df)
if not frames:
    print('NO_TODAY_DATA'); sys.exit(2)
px=pd.concat(frames, axis=1).sort_index().dropna(how='all')
px['Datetime']=px.index
cols=[c for c in px.columns if c in tickers]
px['Index']=px[cols].mean(axis=1, skipna=True)
px[['Datetime','Index']].to_csv(csv_path, index=False)
print('CSV written:', csv_path, 'rows=', len(px))
"
          fi

      - name: Verify inputs & script
        run: |
          test -f "${CSV}" || (echo "Missing CSV" && exit 1)
          test -f scripts/make_intraday_post.py || (echo "Missing script" && exit 1)

      - name: Decide AM/PM variant
        env:
          RUN_SCHEDULE: ${{ github.event.schedule || '' }}
        run: |
          if [ "${RUN_SCHEDULE}" = "35 2 * * 1-5" ]; then
            echo "PUBLISH_VARIANT=am" >> "$GITHUB_ENV"
          else
            echo "PUBLISH_VARIANT=pm" >> "$GITHUB_ENV"
          fi

      - name: Generate intraday snapshot
        run: |
          set -e
          SNAP="${SNAPSHOT_PNG}"
          if [ "${PUBLISH_VARIANT:-pm}" = "am" ]; then SNAP="${SNAPSHOT_AM_PNG}"; fi
          python scripts/make_intraday_post.py \
            --index-key "${INDEX_KEY}" --csv "${CSV}" \
            --out-json "${OUT_JSON}" --out-text "${OUT_TEXT}" \
            --snapshot-png "${SNAP}" --session-start 09:00 \
            --session-end 15:30 --day-anchor 09:00 \
            --basis prev_close --label "${LABEL}" \
            --dt-col "${DT_COL}" --value-type auto || true

      - name: Checkout site repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.SITE_REPO }}
          ref: ${{ env.SITE_BRANCH }}
          token: ${{ env.PUBLISH_TOKEN }}
          path: site
          fetch-depth: 0

      - name: Copy into site tree
        run: |
          dst="site/${PUBLISH_DIR}"
          mkdir -p "${dst}"
          cp -f "${OUT_JSON}" "${dst}/stats.json"
          cp -f "${OUT_TEXT}" "${dst}/post_intraday.txt"
          cp -f "${SNAPSHOT_PNG}" "${dst}/intraday.png" || true
          TZ=Asia/Tokyo date '+%Y/%m/%d %H:%M' > "${dst}/last_run.txt"

      - name: Commit & push
        working-directory: site
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes."
          else
            git commit -m "Update S-COIN+ intraday ($(TZ=Asia/Tokyo date '+%Y-%m-%d %H:%M JST'))"
            git push origin "${SITE_BRANCH}"
          fi
