name: "S-COIN+ • intraday + publish (JST 09:00–15:30)"

on:
  workflow_dispatch:
    inputs:
      session_start: { description: "Session start (HH:MM JST)", required: true, default: "09:00" }
      session_end:   { description: "Session end (HH:MM JST)",   required: true, default: "15:30" }
      day_anchor:    { description: "Day anchor time (HH:MM JST)", required: true, default: "09:00" }
      basis:         { description: "Return basis label", required: true, default: "prev_close" }
      value_type:    { description: "auto | ratio | percent", required: false, default: "auto" }

  schedule:
    - cron: "35 2 * * 1-5"   # JST 11:35（AM スナップ）
    - cron: "35 6 * * 1-5"   # JST 15:35（引け後）

permissions:
  contents: write

concurrency:
  group: scoinp-intraday-${{ github.ref }}
  cancel-in-progress: false

env:
  INDEX_KEY: S_COIN_PLUS
  LABEL: "S-COIN+"
  CSV: docs/outputs/scoin_plus_intraday.csv
  DT_COL: "Datetime"
  BASIS_DEFAULT: prev_close
  VALUE_TYPE_DEFAULT: auto

  # 公開サイト
  SITE_REPO: SakuraIndex/Sakura-Index-Site
  SITE_BRANCH: main
  PUBLISH_DIR: docs/charts/S-COIN+
  PUBLISH_TOKEN: ${{ secrets.SITE_PAT || secrets.SITE_PUBLISH_TOKEN || secrets.GITHUB_TOKEN }}

  # このリポでの一時出力
  OUT_DIR: docs/outputs
  OUT_JSON: docs/outputs/scoinp_stats.json
  OUT_TEXT: docs/outputs/scoinp_post_intraday.txt
  SNAPSHOT_PNG: docs/outputs/scoinp_intraday.png
  SNAPSHOT_AM_PNG: docs/outputs/scoinp_intraday_am.png

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }

      - name: Install deps
        run: |
          python -m pip install -U pip
          python -m pip install pandas matplotlib yfinance pytz

      - name: Skip when market closed (JST)
        run: |
          H=$(TZ=Asia/Tokyo date +%H%M)
          if [ "$H" -lt 0900 ] || [ "$H" -gt 1530 ]; then
            echo "Market closed — skip."
            exit 0
          fi

      - name: Build intraday CSV if tickers exist (JP equities)
        run: |
          set -e
          if [ -f tickers_scoinp.txt ]; then
            python - << 'PY'
import os, sys, pandas as pd, datetime as dt
import pytz
try:
    import yfinance as yf
except Exception as e:
    print('yfinance import error:', e); sys.exit(1)

csv_path = "docs/outputs/scoin_plus_intraday.csv"
with open("tickers_scoinp.txt") as f:
    tickers=[t.strip() for t in f if t.strip() and not t.startswith('#')]

jst = pytz.timezone('Asia/Tokyo')
now = dt.datetime.now(jst)
today = now.date()
start = jst.localize(dt.datetime(today.year, today.month, today.day, 9, 0))
end   = jst.localize(dt.datetime(today.year, today.month, today.day, 15, 30))
frames=[]
for t in tickers:
    try:
        df = yf.download(t, start=start, end=end, interval='1m', progress=False, auto_adjust=True)
    except Exception as e:
        print('download failed:', t, e); continue
    if df is None or df.empty: continue
    df = df[['Close']].rename(columns={'Close': t})
    frames.append(df)
if not frames:
    print('no intraday data fetched — keep existing CSV if any')
    sys.exit(0)
px = pd.concat(frames, axis=1).dropna(how='all')
px.index = px.index.tz_convert(jst)
px['Datetime'] = px.index
px['Index'] = px[[c for c in px.columns if c in tickers]].mean(axis=1, skipna=True)
px[['Datetime','Index']].to_csv(csv_path, index=False)
print('Wrote', csv_path, len(px))
PY
          else
            echo "tickers_scoinp.txt not found — use existing CSV if present"
          fi

      - name: Verify inputs & script
        run: |
          set -e
          test -f "${CSV}" || (echo "❌ Missing CSV: ${CSV}" && exit 1)
          test -f scripts/make_intraday_post.py || (echo "❌ Missing script: scripts/make_intraday_post.py" && exit 1)
          mkdir -p "${OUT_DIR}"

      - name: Decide AM/PM variant (for PNG name)
        env:
          RUN_SCHEDULE: ${{ github.event.schedule || '' }}
        run: |
          if [ "${RUN_SCHEDULE}" = "35 2 * * 1-5" ]; then
            echo "PUBLISH_VARIANT=am" >> "$GITHUB_ENV"
          else
            echo "PUBLISH_VARIANT=pm" >> "$GITHUB_ENV"
          fi

      - name: Generate intraday snapshot (JST) with legacy fallback
        env:
          SESSION_START: ${{ inputs.session_start || '09:00' }}
          SESSION_END:   ${{ inputs.session_end   || '15:30' }}
          DAY_ANCHOR:    ${{ inputs.day_anchor    || '09:00' }}
          BASIS:         ${{ inputs.basis         || env.BASIS_DEFAULT }}
          VALUE_TYPE_IN: ${{ inputs.value_type    || env.VALUE_TYPE_DEFAULT }}
        run: |
          set -euo pipefail

          # 出力PNG名（AM/PM）
          if [ "${PUBLISH_VARIANT:-pm}" = "am" ]; then
            SNAP="${SNAPSHOT_AM_PNG}"
          else
            SNAP="${SNAPSHOT_PNG}"
          fi
          mkdir -p "$(dirname "${SNAP}")"

          echo "=== Generate ${LABEL} intraday (${PUBLISH_VARIANT:-pm}) ==="
          echo "[try] extended CLI (with --label/--dt-col/--value-type)"

          set +e
          python scripts/make_intraday_post.py \
            --index-key "${INDEX_KEY}" \
            --csv "${CSV}" \
            --out-json "${OUT_JSON}" \
            --out-text "${OUT_TEXT}" \
            --snapshot-png "${SNAP}" \
            --session-start "${SESSION_START}" \
            --session-end   "${SESSION_END}" \
            --day-anchor    "${DAY_ANCHOR}" \
            --basis         "${BASIS}" \
            --label         "${LABEL}" \
            --dt-col        "${DT_COL}" \
            --value-type    "${VALUE_TYPE_IN}"
          rc=$?
          set -e

          if [ $rc -ne 0 ]; then
            echo "[fallback] legacy CLI (without --label/--dt-col/--value-type)"
            python scripts/make_intraday_post.py \
              --index-key "${INDEX_KEY}" \
              --csv "${CSV}" \
              --out-json "${OUT_JSON}" \
              --out-text "${OUT_TEXT}" \
              --snapshot-png "${SNAP}" \
              --session-start "${SESSION_START}" \
              --session-end   "${SESSION_END}" \
              --day-anchor    "${DAY_ANCHOR}" \
              --basis         "${BASIS}"
          fi

          ls -l "${OUT_JSON}" "${OUT_TEXT}" "${SNAP}"

      - name: Checkout site repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.SITE_REPO }}
          ref: ${{ env.SITE_BRANCH }}
          token: ${{ env.PUBLISH_TOKEN }}
          path: site
          fetch-depth: 0

      - name: Copy into site tree (canonical names)
        run: |
          set -e
          dst="site/${PUBLISH_DIR}"
          mkdir -p "${dst}"
          cp -f "${OUT_JSON}" "${dst}/stats.json"
          cp -f "${OUT_TEXT}" "${dst}/post_intraday.txt"
          # どちらが生成されてもサイト側は intraday.png に統一
          if   [ -f "${SNAPSHOT_PNG}"    ]; then cp -f "${SNAPSHOT_PNG}"    "${dst}/intraday.png"
          elif [ -f "${SNAPSHOT_AM_PNG}" ]; then cp -f "${SNAPSHOT_AM_PNG}" "${dst}/intraday.png"
          fi
          # last_run.txt を書き込み（JST）
          TZ=Asia/Tokyo date '+%Y/%m/%d %H:%M' > "${dst}/last_run.txt"
          ls -l "${dst}"

      - name: Commit & push site charts
        working-directory: site
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes for site."
          else
            git commit -m "Update S-COIN+ intraday charts ($(TZ=Asia/Tokyo date '+%Y-%m-%d %H:%M JST'))"
            git push origin "${SITE_BRANCH}"
          fi
