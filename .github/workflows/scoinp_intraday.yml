name: S-COIN+ • intraday + publish (JST 09:00–15:30)

on:
  workflow_dispatch:
    inputs:
      session_start: { description: "Session start (HH:MM JST)", required: true, default: "09:00" }
      session_end:   { description: "Session end (HH:MM JST)",   required: true, default: "15:30" }
      day_anchor:    { description: "Day anchor time (HH:MM JST)", required: true, default: "09:00" }
      basis:         { description: "Return basis label", required: true, default: "prev_close" }
      value_type:    { description: "Value type: ratio | percent", required: true, default: "percent" }
  schedule:
    - cron: "35 2 * * 1-5"
    - cron: "35 6 * * 1-5"

permissions:
  contents: write

env:
  INDEX_KEY: S-COIN+
  LABEL: S-COIN+
  CSV: docs/outputs/scoin_plus_intraday.csv
  OUT_JSON: docs/outputs/scoin_plus_stats.json
  OUT_TEXT: docs/outputs/scoin_plus_post_intraday.txt
  SNAPSHOT_PNG: docs/outputs/scoin_plus_intraday.png
  DT_COL: "Datetime"
  SITE_REPO: SakuraIndex/Sakura-Index-Site
  SITE_BRANCH: main
  PUBLISH_DIR: charts/${{ env.INDEX_KEY }}

concurrency:
  group: intraday-${{ github.ref }}-${{ env.INDEX_KEY }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 12
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Resolve CSV path (auto-detect if missing)
        id: csv_detect
        run: |
          set -e
          if [ ! -f "${CSV}" ]; then
            echo "[warn] ${CSV} not found, trying fallback name..."
            if [ -f "docs/outputs/scoinp_intraday.csv" ]; then
              echo "CSV=docs/outputs/scoinp_intraday.csv" >> "$GITHUB_ENV"
            else
              echo "CSV is missing"; exit 1
            fi
          fi

      - name: Verify script exists
        run: test -f scripts/make_intraday_post.py

      - name: Decide publish variant (AM / PM)
        shell: bash
        env: { RUN_SCHEDULE: ${{ github.event.schedule }} }
        run: |
          if [[ "${RUN_SCHEDULE}" == "35 2 * * 1-5" ]]; then
            echo "PUBLISH_VARIANT=am" >> "$GITHUB_ENV"
          else
            echo "PUBLISH_VARIANT=pm" >> "$GITHUB_ENV"
          fi
          echo "VALUE_TYPE=${{ inputs.value_type || 'percent' }}" >> "$GITHUB_ENV"

      - name: Generate intraday snapshot and post
        env:
          SESSION_START: ${{ inputs.session_start || '09:00' }}
          SESSION_END:   ${{ inputs.session_end   || '15:30' }}
          DAY_ANCHOR:    ${{ inputs.day_anchor    || '09:00' }}
          BASIS:         ${{ inputs.basis         || 'prev_close' }}
          VALUE_TYPE:    ${{ env.VALUE_TYPE }}
        run: |
          set -euo pipefail
          python scripts/make_intraday_post.py \
            --index-key "${INDEX_KEY}" \
            --csv "${CSV}" \
            --out-json "${OUT_JSON}" \
            --out-text "${OUT_TEXT}" \
            --snapshot-png "${SNAPSHOT_PNG}" \
            --session-start "${SESSION_START}" \
            --session-end "${SESSION_END}" \
            --day-anchor "${DAY_ANCHOR}" \
            --basis "${BASIS}" \
            --value-type "${VALUE_TYPE}" \
            --dt-col "${DT_COL}" \
            --label "${LABEL}"

      - name: Upload artifacts (debug)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: scoinp_intraday_artifacts
          path: |
            ${OUT_TEXT}
            ${OUT_JSON}
            ${SNAPSHOT_PNG}
          if-no-files-found: ignore
          retention-days: 3

      - name: Checkout site repo (for publishing)
        uses: actions/checkout@v4
        with:
          repository: ${{ env.SITE_REPO }}
          token: ${{ secrets.SITE_PAT }}
          ref: ${{ env.SITE_BRANCH }}
          path: site

      - name: Copy snapshot files into site tree (with AM/PM & long-term)
        run: |
          set -e
          mkdir -p "site/${PUBLISH_DIR}"

          if [ "${PUBLISH_VARIANT}" = "am" ]; then
            cp -f "${SNAPSHOT_PNG}" "site/${PUBLISH_DIR}/intraday_am.png"
          else
            cp -f "${SNAPSHOT_PNG}" "site/${PUBLISH_DIR}/intraday.png"
          fi

          for T in 7d 1m 1y; do
            F="docs/outputs/scoin_plus_${T}.png"
            if [ -f "${F}" ]; then
              cp -f "${F}" "site/${PUBLISH_DIR}/${T}.png"
            fi
          done

      - name: Commit & push site charts
        working-directory: site
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add "${PUBLISH_DIR}" || true
          if ! git diff --cached --quiet; then
            git commit -m "publish(${ {env.INDEX_KEY} }): intraday ${PUBLISH_VARIANT}"
            git push origin "${SITE_BRANCH}"
          else
            echo "No site changes."
          fi
